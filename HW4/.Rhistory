# Cleaning workspace / loading libraries
rm(list = ls())
gc()
library(tidyverse)
library(modelr)
# Load dataset
raw_data <- read_csv('stat312_ml_michaelr.csv')
# Load dataset
raw_data <- read_csv('data312_ml_michaelr.csv')
# Sampling
raw_data_samplingframe <- raw_data %>% mutate(snum = sample.int(n(), n() / n()))
training <- raw_Data_samplinframe %>% filter(snum < 0.6) %>% select(~snum)
training <- raw_Data_samplingframe %>% filter(snum < 0.6) %>% select(~snum)
training <- raw_data_samplingframe %>% filter(snum < 0.6) %>% select(~snum)
query <- raw_data_samplingframe %>% filter(snum >= 0.6, snum < 0.8) %>%
select(~snum)
test <- raw_data_samplingframe %>% filter(snum >= 0.8) %>% select(~snum)
training <- raw_data_samplingframe %>% filter(snum < 0.6) %>% select(-snum)
query <- raw_data_samplingframe %>% filter(snum >= 0.6, snum < 0.8) %>%
select(-snum)
test <- raw_data_samplingframe %>% filter(snum >= 0.8) %>% select(-snum)
View(training)
training <- raw_data_samplingframe %>% filter(snum < 0.6) %>% select(-snum)
query<- raw_data_samplingframe %>% filter(snum>=0.6,snum<0.8) %>% select(-snum)
# Load dataset
raw_data <- read_csv('data312_ml_michaelr.csv')
# Sampling
raw_data_samplingframe <- raw_data %>% mutate(snum = sample.int(n(), n() / n()))
training <- raw_data_samplingframe %>% filter(snum < 0.6) %>% select(-snum)
raw_data_samplingframe <- raw_data %>% mutate(snum=sample.int(n(),n())/n())
training <- raw_data_samplingframe %>% filter(snum < 0.6) %>% select(-snum)
query <- raw_data_samplingframe %>% filter(snum >= 0.6, snum < 0.8) %>%
select(-snum)
raw_data_samplingframe <- raw_data %>%
mutate(snum = sample.int(n(), n()) / n())
training <- raw_data_samplingframe %>% filter(snum < 0.6) %>% select(-snum)
query <- raw_data_samplingframe %>% filter(snum >= 0.6, snum < 0.8) %>%
select(-snum)
test <- raw_data_samplingframe %>% filter(snum >= 0.8) %>% select(-snum)
query <- raw_data_samplingframe %>% filter(snum >= 0.6, snum < 0.8) %>%
select(-snum)
test <- raw_data_samplingframe %>% filter(snum >= 0.8) %>% select(-snum)
training %>% write_csv('michaelr_training.csv')
query %>% write_csv('michaelr_query.csv')
test %>% write_csv('michaelr_test.csv')
training %>% ggplot(aes(x, y, color = Group)) + geom_point()
training %>% filter(Group = 'B') %>%
ggplot(aes(x, y, color = Group)) + geom_point()
training %>% filter(Group = "B") %>%
ggplot(aes(x, y, color = Group)) + geom_point()
training %>% filter(Group =="B") %>%
ggplot(aes(x, y, color = Group)) + geom_point()
training %>% ggplot(aes(x, y, color = Group)) + geom_point() +
facet_grid(vars(s), vars(t))
training %>% filter(Group == 'B') %>% ggplot(aes(x, y)) + geom_point()
training %>% filter(t == 1) %>% ggplot(aes(x, y)) + geom_point()
training %>% count(Group)
training %>% count(Group, t) %>% pivot_wider(names_front, values_from = n)
training_B <- training %>% filter(Group == "B")
lfit <- ln(y~x, training_B)
lfit <- lm(y~x, training_B)
training_lfit <- training_B %>% add_predictions(lfit, var = 'lfit_y')
training_lfit %>% ggplot() + geom_plot(aes(x, y)) + geom_line(aes(x, lfit_y))
training_lfit %>% ggplot() + geom_point(aes(x, y)) + geom_line(aes(x, lfit_y))
training_lfit %>% ggplot() + geom_point(aes(x, y)) + geom_line(aes(x, lfit_y))
training_lfit %>% ggplot() + geom_point(aes(x, y)) + geom_line(aes(x, lfit_y), color = 'red')
training_lfit <- training_B %>% add_predictions(lfit, var = 'lfit_y') %>%
add_residuals(lfit, var = 'lfit_resid')
training_lfit %>% ggplot(aes(x, lfit_resid))
training_lfit %>% ggplot(aes(x, lfit_resid)) + geom_point()
training_lfit <- training_B %>% add_predictions(polyfit, var = 'polyfit_y') %>%
add_residuals(polyfit, var = 'polyfit_resid')
polyfit <- lm(y~poly(x, 2), training_B)
training_lfit <- training_B %>% add_predictions(polyfit, var = 'polyfit_y') %>%
add_residuals(polyfit, var = 'polyfit_resid')
training_both <- training_B %>% add_predictions(polyfit, var = 'polyfit_y') %>%
add_residuals(polyfit, var = 'polyfit_resid')
training_both %>% ggplot(aes(x, polyfit_resid)) + geom_point()
query_B <- query %>% filter(Group == 'B') %>%
add_predictions(lfit, var = 'lfit_pred') %>%
add_residuals(lfit, var = 'lfit_resid') %>%
add_predictions(lfit, var = 'polyfit_resid') %>%
add_residuals(lfit, var = 'polyfit_resid')
query_B %>% ggplot() + geom_point(aes(x, y)) +
geom_line(aes(x, polyfit_pred), color = 'red') +
geom_line(aes(x, lfit_pred), color = 'blue')
query_B <- query %>% filter(Group == 'B') %>%
add_predictions(lfit, var = 'lfit_pred') %>%
add_residuals(lfit, var = 'lfit_resid') %>%
add_predictions(lfit, var = 'polyfit_resid') %>%
add_residuals(lfit, var = 'polyfit_resid')
query_B %>% ggplot() + geom_point(aes(x, y)) +
geom_line(aes(x, polyfit_pred), color = 'red') +
geom_line(aes(x, lfit_pred), color = 'blue')
query_B <- query %>% filter(Group == 'B') %>%
add_predictions(lfit, var = 'lfit_pred') %>%
add_residuals(lfit, var = 'lfit_resid') %>%
add_predictions(lfit, var = 'polyfit_pred') %>%
add_residuals(lfit, var = 'polyfit_resid')
query_B %>% ggplot() + geom_point(aes(x, y)) +
geom_line(aes(x, polyfit_pred), color = 'red') +
geom_line(aes(x, lfit_pred), color = 'blue')
test_B %>% ggplot(aes(polyfit_resid)) + geom_histogram()
test_B <- test %>% filter(Group == 'B') %>%
add_preductions(polyfit, var = 'polyfit_pred') %>%
add_residuals(polyfit, var = 'polyfit, resid')
test_B %>% ggplot(aes(polyfit_resid)) + geom_histogram()
test_B <- test %>% filter(Group == 'B') %>%
add_predictions(polyfit, var = 'polyfit_pred') %>%
add_residuals(polyfit, var = 'polyfit, resid')
test_B %>% ggplot(aes(polyfit_resid)) + geom_histogram()
test_B <- test %>% filter(Group == 'B') %>%
add_predictions(polyfit, var = 'polyfit_pred') %>%
add_residuals(polyfit, var = 'polyfit_resid')
test_B %>% ggplot(aes(polyfit_resid)) + geom_histogram()
my_raw_data <- read_csv('5030143_HW4A.csv')
# Loading raw data
my_data <- read_csv('5030143_HW4A.csv')
# Sampling
samplingframe <- my_data %>%
mutate(snum = sample.int(n(), n()) / n())
my_training <- samplingframe %>% filter(snum < 0.6) %>% select(-snum)
my_query <- samplingframe %>% filter(snum >= 0.6, snum < 0.8) %>%
select(-snum)
my_test <- samplingframe %>% filter(snum >= 0.8) %>% select(-snum)
my_training %>% write_csv('5030143_training.csv')
my_query %>% write_csv('5030143_query.csv')
my_test %>% write_csv('5030143_test.csv')
training %>% count(Group) %>% select(n) %>% chisq.test()
my_training %>% count(Group) %>% select(n) %>% chisq.test()
# Clearing Workspace / Loading libraries
rm(list = ls())
gc()
library(e1071)
library(tidyverse)
library(e1071)
install.packages("e1071", dependencies = TRUE)
library(e1071)
data("spam", packages = 'kernlab')
data("spam", package = 'kernlab')
View(spam)
# Cleaning workspace / loading libraries
rm(list = ls())
gc()
library(tidyverse)
library(modelr)
# Load dataset
raw_data <- read_csv('data312_ml_michaelr.csv')
# Sampling
raw_data_samplingframe <- raw_data %>%
mutate(snum = sample.int(n(), n()) / n())
training <- raw_data_samplingframe %>% filter(snum < 0.6) %>% select(-snum)
query <- raw_data_samplingframe %>% filter(snum >= 0.6, snum < 0.8) %>%
select(-snum)
test <- raw_data_samplingframe %>% filter(snum >= 0.8) %>% select(-snum)
training %>% write_csv('michaelr_training.csv')
query %>% write_csv('michaelr_query.csv')
test %>% write_csv('michaelr_test.csv')
# Exploration
training %>% ggplot(aes(x, y, color = Group)) + geom_point() +
facet_grid(vars(s), vars(t))
# Exploration
training %>% ggplot(aes(x, y, color = Group)) + geom_point() +
facet_grid(vars(s), vars(t))
training %>% filter(Group == 'B') %>% ggplot(aes(x, y)) + geom_point()
training %>% filter(t == 1) %>% ggplot(aes(x, y)) + geom_point()
training %>% count(Group)
training %>% count(Group, t) %>% pivot_wider(names_front, values_from = n)
# Exploration
training %>% ggplot(aes(x, y, color = Group)) + geom_point() +
facet_grid(vars(s), vars(t))
training %>% filter(Group == 'B') %>% ggplot(aes(x, y)) + geom_point()
training %>% filter(t == 1) %>% ggplot(aes(x, y)) + geom_point()
training %>% count(Group)
training %>% count(Group, t) %>% pivot_wider(names_front, values_from = n)
training %>% count(Group, t) %>% pivot_wider(names_front, values_from = n)
